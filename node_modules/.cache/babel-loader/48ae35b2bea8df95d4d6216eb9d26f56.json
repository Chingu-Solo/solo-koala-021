{"ast":null,"code":"import _slicedToArray from \"/home/_rdx98/Documentos/Projetos/chingu-solo-project-tier2-201901/favorite-fonts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/_rdx98/Documentos/Projetos/chingu-solo-project-tier2-201901/favorite-fonts/src/App.tsx\";\nimport React, { useState, useMemo } from 'react';\nimport { TinyButton as ScrollUpButton } from \"react-scroll-up-button\";\nimport './App.css';\nimport Header from './components/Header';\nimport FontCard from './components/FontCard';\nimport Footer from './components/Footer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { generateQuote, setModeByCurrentHours } from './helpers/helpers.function';\nimport { Mode, ListLayout } from './helpers/helpers.enum';\nconst reallyCoolQuotes = [\"Don’t let the noise of others’ opinions drown out your own inner voice.\", \"Your limitation—it’s only your imagination.\", \"Push yourself, because no one else is going to do it for you.\", \"Sometimes later becomes never. Do it now.\", \"Great things never come from comfort zones.\", \"Dream it. Wish it. Do it.\", \"Success doesn’t just find you. You have to go out and get it.\", \"The harder you work for something, the greater you’ll feel when you achieve it.\", \"Dream bigger. Do bigger.\", \"Don’t stop when you’re tired. Stop when you’re done.\", \"Wake up with determination. Go to bed with satisfaction.\", \"Do something today that your future self will thank you for.\", \"Little things make big days.\", \"It’s going to be hard, but hard does not mean impossible.\"];\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        font = _useState2[0],\n        setFont = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sampleText = _useState4[0],\n        setSampleText = _useState4[1];\n\n  const _useState5 = useState('12px'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        fontSize = _useState6[0],\n        setFontSize = _useState6[1];\n\n  const _useState7 = useState(setModeByCurrentHours()),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mode = _useState8[0],\n        setMode = _useState8[1];\n\n  const _useState9 = useState(ListLayout.Grid),\n        _useState10 = _slicedToArray(_useState9, 2),\n        listLayout = _useState10[0],\n        setListLayout = _useState10[1];\n\n  const defaultQuote = useMemo(() => generateQuote(reallyCoolQuotes), []); // useEffect(() => {\n  // },[])\n\n  function handleChange(e) {\n    const _e$currentTarget = e.currentTarget,\n          id = _e$currentTarget.id,\n          value = _e$currentTarget.value;\n\n    if (id === \"font\") {\n      setFont(value);\n    } else if (id === \"sampleText\") {\n      setSampleText(value);\n    }\n  }\n\n  function handleDropDown(e) {\n    setFontSize(e.currentTarget.value);\n  }\n\n  function changeMode(e) {\n    e.preventDefault(); // if () {\n    //   setMode(Mode.DarkMode)\n    // }\n    // else {\n    //   setMode(Mode.LightMode)\n    // }\n\n    console.log(typeof e.currentTarget.value);\n  }\n\n  return React.createElement(\"div\", {\n    className: `app-container ${mode === Mode.DarkMode ? \"dark-mode\" : \"light-mode\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"font-manager\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search fonts\",\n    name: \"font\",\n    id: \"font\",\n    value: font,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type something\",\n    name: \"sampleText\",\n    id: \"sampleText\",\n    value: sampleText,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    name: \"fontSize\",\n    id: \"fontSize\",\n    onChange: handleDropDown,\n    value: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"12px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"12px\"), React.createElement(\"option\", {\n    value: \"24px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"24px\"), React.createElement(\"option\", {\n    value: \"36px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"36px\"), React.createElement(\"option\", {\n    value: \"48px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"48px\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    name: \"DarkMode\",\n    value: Mode.DarkMode,\n    onClick: changeMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    name: \"LightMode\",\n    value: Mode.LightMode,\n    onClick: changeMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \" \", React.createElement(FontAwesomeIcon, {\n    icon: [\"fas\", \"list\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \" \"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"  \", React.createElement(FontAwesomeIcon, {\n    icon: [\"fas\", \"spinner\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"font-card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(FontCard, {\n    author: \"Eu\",\n    title: \"Font Massa\",\n    sampleText: sampleText || defaultQuote,\n    fontSize: fontSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(ScrollUpButton, {\n    style: {\n      backgroundColor: \"transparent\",\n      fill: mode === Mode.DarkMode ? \"lightblue\" : \"red\",\n      outline: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/_rdx98/Documentos/Projetos/chingu-solo-project-tier2-201901/favorite-fonts/src/App.tsx"],"names":["React","useState","useMemo","TinyButton","ScrollUpButton","Header","FontCard","Footer","FontAwesomeIcon","generateQuote","setModeByCurrentHours","Mode","ListLayout","reallyCoolQuotes","App","font","setFont","sampleText","setSampleText","fontSize","setFontSize","mode","setMode","Grid","listLayout","setListLayout","defaultQuote","handleChange","e","currentTarget","id","value","handleDropDown","changeMode","preventDefault","console","log","DarkMode","LightMode","backgroundColor","fill","outline"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { TinyButton as ScrollUpButton } from \"react-scroll-up-button\";\nimport './App.css';\nimport Header from './components/Header'\nimport FontCard from './components/FontCard'\nimport Footer from './components/Footer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { generateQuote, setModeByCurrentHours } from './helpers/helpers.function'\nimport { Mode, ListLayout } from './helpers/helpers.enum'\n\nconst reallyCoolQuotes: string[] = [\n  \"Don’t let the noise of others’ opinions drown out your own inner voice.\",\n  \"Your limitation—it’s only your imagination.\",\n  \"Push yourself, because no one else is going to do it for you.\",\n  \"Sometimes later becomes never. Do it now.\",\n  \"Great things never come from comfort zones.\",\n  \"Dream it. Wish it. Do it.\",\n  \"Success doesn’t just find you. You have to go out and get it.\",\n  \"The harder you work for something, the greater you’ll feel when you achieve it.\",\n  \"Dream bigger. Do bigger.\",\n  \"Don’t stop when you’re tired. Stop when you’re done.\",\n  \"Wake up with determination. Go to bed with satisfaction.\",\n  \"Do something today that your future self will thank you for.\",\n  \"Little things make big days.\",\n  \"It’s going to be hard, but hard does not mean impossible.\"\n]\n\nconst App: React.FC = () => {\n  const [font, setFont] = useState('')\n  const [sampleText, setSampleText] = useState(\"\")\n  const [fontSize, setFontSize] = useState('12px')\n  const [mode, setMode] = useState(setModeByCurrentHours())\n  const [listLayout, setListLayout] = useState(ListLayout.Grid)\n  const defaultQuote = useMemo<string>(() => generateQuote(reallyCoolQuotes), [] )\n  // useEffect(() => {\n  // },[])\n\n  function handleChange(e: React.FormEvent<HTMLInputElement>) {\n    const { id, value } = e.currentTarget\n    if (id === \"font\") {\n      setFont(value)\n    }\n    else if (id === \"sampleText\") {\n      setSampleText(value)\n    }\n  }\n\n  function handleDropDown(e: React.FormEvent<HTMLSelectElement>) {\n    setFontSize(e.currentTarget.value)\n  }\n\n  function changeMode(e: React.FormEvent<HTMLButtonElement>) {\n    e.preventDefault()\n    // if () {\n    //   setMode(Mode.DarkMode)\n    // }\n    // else {\n    //   setMode(Mode.LightMode)\n    // }\n    console.log(typeof e.currentTarget.value)\n  }\n\n  return (\n    <div className={`app-container ${mode === Mode.DarkMode ? \"dark-mode\" : \"light-mode\"}`}>\n      <Header />\n      <div className=\"font-manager\">\n        <form>\n          <input type=\"text\" placeholder=\"Search fonts\" name=\"font\" id=\"font\" value={font} onChange={handleChange} />\n          <input type=\"text\" placeholder=\"Type something\" name=\"sampleText\" id=\"sampleText\" value={sampleText} onChange={handleChange} />\n          <select name=\"fontSize\" id=\"fontSize\" onChange={handleDropDown} value={fontSize}>\n            <option value=\"12px\">12px</option>\n            <option value=\"24px\">24px</option>\n            <option value=\"36px\">36px</option>\n            <option value=\"48px\">48px</option>\n          </select>\n          <fieldset>\n            <button name=\"DarkMode\" value={Mode.DarkMode} onClick={changeMode}></button>\n            <button name=\"LightMode\" value={Mode.LightMode} onClick={changeMode}></button>\n          </fieldset>\n          <button> <FontAwesomeIcon icon={[\"fas\", \"list\"]} /> </button>\n          <button>  <FontAwesomeIcon icon={[\"fas\", \"spinner\"]} /></button>\n        </form>\n      </div>\n      <div className=\"font-card-container\">\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n        <FontCard author=\"Eu\" title=\"Font Massa\" sampleText={sampleText || defaultQuote} fontSize={fontSize} />\n      </div>\n      <ScrollUpButton style={{ backgroundColor: \"transparent\", fill: mode === Mode.DarkMode ? \"lightblue\" : \"red\", outline: \"none\" }} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}