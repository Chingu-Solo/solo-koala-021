{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { PanelView } from \"./panelView\";\n\nvar PanelStack =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PanelStack, _super);\n\n  function PanelStack() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      direction: \"push\",\n      stack: _this.props.stack != null ? _this.props.stack.slice().reverse() : [_this.props.initialPanel]\n    };\n\n    _this.handlePanelClose = function (panel) {\n      var stack = _this.state.stack; // only remove this panel if it is at the top and not the only one.\n\n      if (stack[0] !== panel || stack.length <= 1) {\n        return;\n      }\n\n      safeInvoke(_this.props.onClose, panel);\n\n      if (_this.props.stack == null) {\n        _this.setState(function (state) {\n          return {\n            direction: \"pop\",\n            stack: state.stack.filter(function (p) {\n              return p !== panel;\n            })\n          };\n        });\n      }\n    };\n\n    _this.handlePanelOpen = function (panel) {\n      safeInvoke(_this.props.onOpen, panel);\n\n      if (_this.props.stack == null) {\n        _this.setState(function (state) {\n          return {\n            direction: \"push\",\n            stack: [panel].concat(state.stack)\n          };\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  PanelStack.prototype.componentDidUpdate = function (prevProps, _prevState, _snapshot) {\n    _super.prototype.componentDidUpdate.call(this, prevProps, _prevState, _snapshot); // Always update local stack if stack prop changes\n\n\n    if (this.props.stack !== prevProps.stack && prevProps.stack != null) {\n      this.setState({\n        stack: this.props.stack.slice().reverse()\n      });\n    } // Only update animation direction if stack length changes\n\n\n    var stackLength = this.props.stack != null ? this.props.stack.length : 0;\n    var prevStackLength = prevProps.stack != null ? prevProps.stack.length : 0;\n\n    if (stackLength !== prevStackLength && prevProps.stack != null) {\n      this.setState({\n        direction: prevProps.stack.length - this.props.stack.length < 0 ? \"push\" : \"pop\"\n      });\n    }\n  };\n\n  PanelStack.prototype.render = function () {\n    var classes = classNames(Classes.PANEL_STACK, Classes.PANEL_STACK + \"-\" + this.state.direction, this.props.className);\n    return React.createElement(TransitionGroup, {\n      className: classes,\n      component: \"div\"\n    }, this.renderCurrentPanel());\n  };\n\n  PanelStack.prototype.validateProps = function (props) {\n    if (props.initialPanel == null && props.stack == null || props.initialPanel != null && props.stack != null) {\n      throw new Error(Errors.PANEL_STACK_INITIAL_PANEL_STACK_MUTEX);\n    }\n\n    if (props.stack != null && props.stack.length === 0) {\n      throw new Error(Errors.PANEL_STACK_REQUIRES_PANEL);\n    }\n  };\n\n  PanelStack.prototype.renderCurrentPanel = function () {\n    var _a = this.props.showPanelHeader,\n        showPanelHeader = _a === void 0 ? true : _a;\n    var stack = this.state.stack;\n\n    if (stack.length === 0) {\n      return null;\n    }\n\n    var activePanel = stack[0],\n        previousPanel = stack[1];\n    return React.createElement(CSSTransition, {\n      classNames: Classes.PANEL_STACK,\n      key: stack.length,\n      timeout: 400\n    }, React.createElement(PanelView, {\n      onClose: this.handlePanelClose,\n      onOpen: this.handlePanelOpen,\n      panel: activePanel,\n      previousPanel: previousPanel,\n      showHeader: showPanelHeader\n    }));\n  };\n\n  PanelStack = tslib_1.__decorate([polyfill], PanelStack);\n  return PanelStack;\n}(AbstractPureComponent2);\n\nexport { PanelStack };","map":{"version":3,"sources":["../../../../src/components/panel-stack/panelStack.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { PanelView } from \"./panelView\";\nvar PanelStack = /** @class */ (function (_super) {\n    tslib_1.__extends(PanelStack, _super);\n    function PanelStack() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            direction: \"push\",\n            stack: _this.props.stack != null ? _this.props.stack.slice().reverse() : [_this.props.initialPanel],\n        };\n        _this.handlePanelClose = function (panel) {\n            var stack = _this.state.stack;\n            // only remove this panel if it is at the top and not the only one.\n            if (stack[0] !== panel || stack.length <= 1) {\n                return;\n            }\n            safeInvoke(_this.props.onClose, panel);\n            if (_this.props.stack == null) {\n                _this.setState(function (state) { return ({\n                    direction: \"pop\",\n                    stack: state.stack.filter(function (p) { return p !== panel; }),\n                }); });\n            }\n        };\n        _this.handlePanelOpen = function (panel) {\n            safeInvoke(_this.props.onOpen, panel);\n            if (_this.props.stack == null) {\n                _this.setState(function (state) { return ({\n                    direction: \"push\",\n                    stack: [panel].concat(state.stack),\n                }); });\n            }\n        };\n        return _this;\n    }\n    PanelStack.prototype.componentDidUpdate = function (prevProps, _prevState, _snapshot) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, _prevState, _snapshot);\n        // Always update local stack if stack prop changes\n        if (this.props.stack !== prevProps.stack && prevProps.stack != null) {\n            this.setState({ stack: this.props.stack.slice().reverse() });\n        }\n        // Only update animation direction if stack length changes\n        var stackLength = this.props.stack != null ? this.props.stack.length : 0;\n        var prevStackLength = prevProps.stack != null ? prevProps.stack.length : 0;\n        if (stackLength !== prevStackLength && prevProps.stack != null) {\n            this.setState({ direction: prevProps.stack.length - this.props.stack.length < 0 ? \"push\" : \"pop\" });\n        }\n    };\n    PanelStack.prototype.render = function () {\n        var classes = classNames(Classes.PANEL_STACK, Classes.PANEL_STACK + \"-\" + this.state.direction, this.props.className);\n        return (React.createElement(TransitionGroup, { className: classes, component: \"div\" }, this.renderCurrentPanel()));\n    };\n    PanelStack.prototype.validateProps = function (props) {\n        if ((props.initialPanel == null && props.stack == null) ||\n            (props.initialPanel != null && props.stack != null)) {\n            throw new Error(Errors.PANEL_STACK_INITIAL_PANEL_STACK_MUTEX);\n        }\n        if (props.stack != null && props.stack.length === 0) {\n            throw new Error(Errors.PANEL_STACK_REQUIRES_PANEL);\n        }\n    };\n    PanelStack.prototype.renderCurrentPanel = function () {\n        var _a = this.props.showPanelHeader, showPanelHeader = _a === void 0 ? true : _a;\n        var stack = this.state.stack;\n        if (stack.length === 0) {\n            return null;\n        }\n        var activePanel = stack[0], previousPanel = stack[1];\n        return (React.createElement(CSSTransition, { classNames: Classes.PANEL_STACK, key: stack.length, timeout: 400 },\n            React.createElement(PanelView, { onClose: this.handlePanelClose, onOpen: this.handlePanelOpen, panel: activePanel, previousPanel: previousPanel, showHeader: showPanelHeader })));\n    };\n    PanelStack = tslib_1.__decorate([\n        polyfill\n    ], PanelStack);\n    return PanelStack;\n}(AbstractPureComponent2));\nexport { PanelStack };\n//# sourceMappingURL=panelStack.js.map"]},"metadata":{},"sourceType":"module"}